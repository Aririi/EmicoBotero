/* eslint-disable no-magic-numbers, no-warning-comments */

"use strict";

module.exports = {
    env: {
        "node": true,
        "commonjs": true,
        "es2022": true
    },
    parserOptions: {
        "emcaVersion": "latest",
        "sourceType": "script"
    },
    rules: {
        // logic
        "array-callback-return": "error",
        "constructor-super": "error",
        "for-direction": "error",
        "getter-return": ["error", { "allowImplicit": false }],
        "no-async-promise-executor": "error",
        "no-await-in-loop": "off",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": ["error", "except-parens"],
        "no-const-assign": "error",
        "no-constant-binary-expression": "warn",
        "no-constant-condition": ["warn", { "checkLoops": false }],
        "no-constructor-return": "error",
        "no-control-regex": "warn",
        "no-debugger": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": ["error", { "includeExports": true }],
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-ex-assign": "error",
        "no-fallthrough": "off",
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": "off",
        "no-invalid-regexp": ["error", { "allowConstructorFlags": [] }],
        "no-irregular-whitespace": ["warn", { "skipStrings": false, "skipComments": true, "skipRegExps": false, "skipTemplates": false }],
        "no-loss-of-precision": "error",
        "no-misleading-character-class": "error",
        "no-new-symbol": "error",
        "no-obj-calls": "error",
        "no-promise-executor-return": "error",
        "no-prototype-builtins": "error",
        "no-self-assign": ["error", { "props": true }],
        "no-self-compare": "error",
        "no-setter-return": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-this-before-super": "error",
        "no-undef": ["error", { "typeof": true }],
        "no-unexpected-multiline": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": ["error", { "enforceForOrderingRelations": false }],
        "no-unsafe-optional-chaining": ["error", { "disallowArithmeticOperators": false }],
        "no-unused-private-class-members": "error",
        "no-unused-vars": ["warn", { "vars": "all", "args": "all", "ignoreRestSiblings": true, "caughtErrors": "all" }],
        "no-use-before-define": ["error", { "functions": true, "classes": true, "variables": true, "allowNamedExports": false }],
        "no-useless-backreference": "error",
        "require-atomic-updates": ["error", { "allowProperties": false }], // no idea what this one does
        "use-isnan": ["error", { "enforceForSwitchCase": true, "enforceForIndexOf": true }],
        "valid-typeof": ["error", { "requireStringLiterals": true }],

        // stlye and layout
        "array-bracket-newline": ["error", { "multiline": true }],
        "array-bracket-spacing": ["error", "never"],
        "array-element-newline": ["error", "consistent"],
        "arrow-parens": ["error", "always"],
        "arrow-spacing": "error",
        "block-spacing": ["error", "always"],
        "brace-style": ["error", "1tbs", { "allowSingleLine": false }],
        "comma-dangle": ["error", "never"],
        "comma-spacing": ["error", { "before": false, "after": true }],
        "comma-style": ["error", "last"],
        "computed-property-spacing": ["error", "never", { "enforceForClassMembers": true }],
        "dot-location": ["error", "property"],
        "eol-last": "off", // pretty much all code is written in a function in the middle of the program
        "func-call-spacing": ["error", "never"],
        "function-call-argument-newline": ["error", "consistent"],
        "function-paren-newline": "off",
        "generator-star-spacing": ["error", { "before": false, "after": true }],
        "implicit-arrow-linebreak": ["error", "beside"],
        "indent": ["error", 4, { "SwitchCase": 0, "VariableDeclarator": "first", "outerIIFEBody": 1, "MemberExpression": 1, "FunctionDeclaration": { "parameters": "first", "body": 1 }, "FunctionExpression": { "parameters": "first", "body": 1 }, "StaticBlock": { "body": 1 }, "CallExpression": { "arguments": "first" }, "ArrayExpression": "first", "ObjectExpression": 1, "ImportDeclaration": 1, "flatTernaryExpressions": true, "offsetTernaryExpressions": false, "ignoreComments": false }],
        "jsx-quotes": ["error", "prefer-double"],
        "key-spacing": "off",
        "keyword-spacing": ["error", { "before": true, "after": true, "overrides": {} }],
        "line-comment-position": "off",
        "linebreak-style": ["error", "unix"],
        "lines-around-comment": "off",
        "lines-between-class-members": "off",
        "max-len": ["off", { "code": 80, "tabWidth": 4, "comments": 160, "ignoreComments": true, "ignoreUrls": true, "ignoreStrings": false, "ignoreTemplateLiterals": false, "ignoreRegExpLiterals": false }],
        "max-statements-per-line": ["error", { "max": 1 }],
        "multiline-ternary": ["error", "never"],
        "new-parens": "off",
        "newline-per-chained-call": "error",
        "no-extra-parens": "off",
        "no-mixed-spaces-and-tabs": "error",
        "no-multi-spaces": ["error", { "ignoreEOLComments": false }],
        "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1, "maxBOF": 0 }],
        "no-tabs": ["error", { "allowIndentationTabs": false }],
        "no-trailing-spaces": ["error", { "skipBlankLines": false, "ignoreComments": false }],
        "no-whitespace-before-property": "error",
        "nonblock-statement-body-position": "off", // use curly rule
        "object-curly-newline": ["error", { "consistent": true }],
        "object-curly-spacing": ["error", "always"],
        "object-property-newline": "off", // TODO: not sure right now
        "operator-linebreak": ["error", "before"],
        "padded-blocks": ["error", "never"],
        "padding-line-between-statement": "off", // TODO: im not dealing with all the permutations right now
        "quotes": ["error", "double", { "allowTemplateLiterals": true }],
        "rest-spread-spacing": ["error", "never"],
        "semi": ["error", "always"],
        "semi-spacing": ["error", { "before": false, "after": true }],
        "semi-style": ["error", "last"],
        "space-before-blocks": ["error", "always"],
        "space-before-function-paren": ["error", { "anonymous": "never", "named": "never", "asyncArrow": "always" }],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": ["error", { "int32Hint": false }],
        "space-unary-ops": ["error", { "words": true, "nonwords": false }],
        "switch-colon-spacing": ["error", { "after": true, "before": false }],
        "template-curly-spacing": ["error", "never"],
        "template-tag-spacing": ["error", "never"],
        "unicode-bom": "off",
        "wrap-iife": ["error", "inside"],
        "wrap-regex": "off",
        "yield-star-spacing": ["error", { "before": false, "after": true }],

        // "alternate ways of doing things"
        "accessor-pairs": "off",
        "arrow-body-style": ["error", "as-needed"],
        "block-scoped-var": "error",
        "camelcase": ["error", { "properties": "always" }],
        "capitalized-comments": "off",
        "class-methods-use-this": ["error", { "enforceForClassFields": true }],
        "complexity": "off",
        "consistent-return": "off", // TODO: not sure right now
        "consistent-this": "off", // TODO: not sure right now
        "curly": ["error", "all"],
        "default-case": "off",
        "default-case-last": "error",
        "default-param-last": "error",
        "dot-notation": "off", // sometimes its necessary to use [`${property}`] format
        "eqeqeq": ["error", "always", { "null": "always" }],
        "func-name-matching": ["error", "always", { "considerPropertyDescriptor": false, "includeCommonJSModuleExports": false }],
        "func-names": "off",
        "func-style": "off",
        "grouped-accessor-pairs": "off",
        "guard-for-in": "error",
        "id-denylist": "off",
        "id-length": "off",
        "id-match": "off",
        "init-declarations": ["error", "always"],
        "max-classes-per-file": "off",
        "max-depth": "off", // possibly change to warn
        "max-lines": "off",
        "max-lines-per-function": "off", // possibly change to warn
        "max-nested-callbacks": "off", // possibly change to warn
        "max-params": "off",
        "max-statements": "off", // possibly change to warn
        "multiline-comment-style": "off",
        "new-cap": ["error", { "newIsCap": true, "capIsNew": true, "properties": true }],
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-bitwise": "off",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-confusing-arrow": "off", // in case it conflicts with another arrow rule
        "no-console": "off", // TODO: turn on when better logging library is added
        "no-continue": "off", // TODO: not sure right now
        "no-delete-var": "error",
        "no-div-regex": "off",
        "no-else-return": ["error", { "allowElseIf": true }],
        "no-empty": ["warn", { "allowEmptyCatch": false }],
        "no-empty-function": "warn",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": ["error", { "enforceForLogicalOperands": true }],
        "no-extra-label": "error",
        "no-extra-semi": "error",
        "no-floating-decimal": "error",
        "no-global-assign": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "off", // TODO: im too tired to read through this rule now
        "no-implied-eval": "error",
        "no-inline-comments": "off",
        "no-invalid-this": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        "no-magic-numbers": "off", // if this gets annoying turn it off
        "no-mixed-operators": "off", // TODO: im too tired to read through this rule now
        "no-multi-assign": "error",
        "no-multi-str": "error",
        "no-negated-condition": "error",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-nonoctal-decimal-escape": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error", // TODO: read the available options
        "no-plusplus": "off",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-restricted-exports": "off",
        "no-restricted-globals": "off",
        "no-restricted-imports": "off",
        "no-restricted-properties": "off",
        "no-restricted-syntax": "off",
        "no-return-assign": ["error", "always"],
        "no-return-await": "error", // might turn off
        "no-script-url": "error",
        "no-sequences": ["error", { "allowInParentheses": false }],
        "no-shadow": ["error", { "builtinGlobals": true, "hoist": "all", "ignoreOnInitialization": false }], // might turn hoist to functions
        "no-shadow-restricted-names": "error",
        "no-ternary": "off",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-undefined": "error",
        "no-underscore-dangle": "error", // TODO: read the available options
        "no-unneeded-ternary": ["error", { "defaultAssignment": true }],
        "no-unused-expressions": "off", // TODO: im too tired to read through this rule now
        "no-unused-labels": "error",
        "no-useless-call": "error",
        "no-useless-catch": "error",
        "no-useless-computed-key": ["error", { "enforceForClassMembers": true }],
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-escape": "error",
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": ["error", { "allowAsStatement": false }],
        "no-warning-comments": ["warn", { "terms": ["todo", "fixme"], "location": "anywhere" }],
        "no-with": "error",
        "object-shorthand": ["error", "properties"],
        "one-var": ["error", "never"],
        "one-var-declaration-per-line": ["error", "always"],
        "operator-assignment": ["error", "always"],
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-destructing": "off", // TODO: im too tired to read through this rule now
        "prefer-exponentiation-operator": "error",
        "prefer-named-capture-group": "warn", // TODO: not sure right now
        "prefer-numeric-literals": "off", // TODO: not sure right now
        "prefer-object-has-own": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": ["error", { "allowEmptyReject": false }],
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "quote-props": "off",
        "radix": ["error", "always"],
        "require-await": "off", // TODO: look into async functions and revise
        "require-unicode-regexp": "off",
        "require-yield": "error",
        "sort-imports": "off",
        "sort-keys": "off",
        "sort-vars": "off",
        "spaced-comment": ["error", "always"],
        "strict": ["error", "safe"],
        "symbol-description": "off",
        "vars-on-top": "off", // vars are disabled
        "yoda": ["error", "never"]
    }
};
